 class TreeNode {
		int data;
		TreeNode left;
		TreeNode right;
		TreeNode(int data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}
  
  import java.util.*;
public class Solution {
	public static ArrayList<Integer> reverseLevelOrder(TreeNode root) {
         ArrayList<Integer> result = new ArrayList<>();
        if(root == null){
            return result;
        }
		Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        Stack <TreeNode>st = new Stack<>();
        while(q.size()>0){
            TreeNode cur = q.remove();
            st.push(cur);
            if(cur.left!=null){
                q.add(cur.left);
            }
             if(cur.right!= null){
                q.add(cur.right);
            }
        }
       
        while (!st.empty()){
            TreeNode d = st.pop();
            result.add(d.data);
        }
        return result;
        
	}
}
